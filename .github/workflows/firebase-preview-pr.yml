name: Deploy to Firebase Preview Channel on pull request
concurrency: development
'on': pull_request
env:
  env_var: ${{ vars.ENV_CONTEXT_VAR }}
  VITE_MIDTRANS_API_URL: '${{ vars.VITE_MIDTRANS_API_URL }}'
  VITE_MIDTRANS_CLIENT_ID: '${{ secrets.VITE_MIDTRANS_CLIENT_ID }}'
  VITE_FIREBASE_API_KEY: '${{ secrets.VITE_FIREBASE_API_KEY }}'
  VITE_FIREBASE_AUTH_DOMAIN: '${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}'
  VITE_FIREBASE_DATABASE_URL: '${{ secrets.VITE_FIREBASE_DATABASE_URL }}'
  VITE_FIREBASE_PROJECT_ID: '${{ secrets.VITE_FIREBASE_PROJECT_ID }}'
  VITE_FIREBASE_STORAGE_BUCKET: '${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}'
  VITE_FIREBASE_MESSAGING_SENDER_ID: '${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}'
  VITE_FIREBASE_APP_ID: '${{ secrets.VITE_FIREBASE_APP_ID }}'
  VITE_FIREBASE_MEASUREMENT_ID: '${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}'
jobs:
  build_and_preview:
    if: '${{ github.event.pull_request.head.repo.full_name == github.repository }}'
    runs-on: ubuntu-latest
    environment: development
    steps:
      - uses: actions/checkout@v3
      - run: npm install && npm run build
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_ALI_ROCK_STORE }}'
          channelId: ${{ env.GITHUB_REF_NAME }}
          expires: 1d
          projectId: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
